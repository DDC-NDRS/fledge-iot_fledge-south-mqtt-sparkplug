# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sparkplug_b.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sparkplug_b.proto',
  package='sparkplug',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x11sparkplug_b.proto\x12\tsparkplug\"\x8c\x01\n\x06Metric\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\x14\n\nbool_value\x18\x03 \x01(\x08H\x00\x12\x15\n\x0b\x66loat_value\x18\x04 \x01(\x02H\x00\x12\x13\n\tint_value\x18\x05 \x01(\x03H\x00\x12\x16\n\x0cstring_value\x18\x06 \x01(\tH\x00\x42\x07\n\x05value\"-\n\x07Payload\x12\"\n\x07metrics\x18\x01 \x03(\x0b\x32\x11.sparkplug.Metricb\x06proto3')
)




_METRIC = _descriptor.Descriptor(
  name='Metric',
  full_name='sparkplug.Metric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='sparkplug.Metric.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='sparkplug.Metric.timestamp', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bool_value', full_name='sparkplug.Metric.bool_value', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='float_value', full_name='sparkplug.Metric.float_value', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int_value', full_name='sparkplug.Metric.int_value', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string_value', full_name='sparkplug.Metric.string_value', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='sparkplug.Metric.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=33,
  serialized_end=173,
)


_PAYLOAD = _descriptor.Descriptor(
  name='Payload',
  full_name='sparkplug.Payload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics', full_name='sparkplug.Payload.metrics', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=220,
)

_METRIC.oneofs_by_name['value'].fields.append(
  _METRIC.fields_by_name['bool_value'])
_METRIC.fields_by_name['bool_value'].containing_oneof = _METRIC.oneofs_by_name['value']
_METRIC.oneofs_by_name['value'].fields.append(
  _METRIC.fields_by_name['float_value'])
_METRIC.fields_by_name['float_value'].containing_oneof = _METRIC.oneofs_by_name['value']
_METRIC.oneofs_by_name['value'].fields.append(
  _METRIC.fields_by_name['int_value'])
_METRIC.fields_by_name['int_value'].containing_oneof = _METRIC.oneofs_by_name['value']
_METRIC.oneofs_by_name['value'].fields.append(
  _METRIC.fields_by_name['string_value'])
_METRIC.fields_by_name['string_value'].containing_oneof = _METRIC.oneofs_by_name['value']
_PAYLOAD.fields_by_name['metrics'].message_type = _METRIC
DESCRIPTOR.message_types_by_name['Metric'] = _METRIC
DESCRIPTOR.message_types_by_name['Payload'] = _PAYLOAD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), dict(
  DESCRIPTOR = _METRIC,
  __module__ = 'sparkplug_b_pb2'
  # @@protoc_insertion_point(class_scope:sparkplug.Metric)
  ))
_sym_db.RegisterMessage(Metric)

Payload = _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), dict(
  DESCRIPTOR = _PAYLOAD,
  __module__ = 'sparkplug_b_pb2'
  # @@protoc_insertion_point(class_scope:sparkplug.Payload)
  ))
_sym_db.RegisterMessage(Payload)


# @@protoc_insertion_point(module_scope)
